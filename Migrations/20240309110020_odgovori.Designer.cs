// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hakaton.Data;

#nullable disable

namespace hakaton.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240309110020_odgovori")]
    partial class odgovori
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("hakaton.Data.AutentifikacijaToken", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("vrijednost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("vrijemeEvidentiranja")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("KorisnikID");

                    b.ToTable("AutentifikacijaToken");
                });

            modelBuilder.Entity("hakaton.Data.Korisnici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("hakaton.Data.Lekcija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PredmetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PredmetId");

                    b.ToTable("Lekcija");
                });

            modelBuilder.Entity("hakaton.Data.Odgovor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Odgovori")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PitanjeId")
                        .HasColumnType("int");

                    b.Property<bool>("isTacan")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PitanjeId");

                    b.ToTable("Odgovor");
                });

            modelBuilder.Entity("hakaton.Data.Pitanje", b =>
                {
                    b.Property<int>("PitanjeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PitanjeId"));

                    b.Property<int>("LekcijaId")
                        .HasColumnType("int");

                    b.Property<string>("Pitanjee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PitanjeId");

                    b.HasIndex("LekcijaId");

                    b.ToTable("Pitanje");
                });

            modelBuilder.Entity("hakaton.Data.Predmet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Predmet");
                });

            modelBuilder.Entity("hakaton.Data.Skola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skola");
                });

            modelBuilder.Entity("hakaton.Data.Test", b =>
                {
                    b.Property<int>("TestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TestId"));

                    b.Property<int>("LekcijaId")
                        .HasColumnType("int");

                    b.HasKey("TestId");

                    b.HasIndex("LekcijaId");

                    b.ToTable("Test");
                });

            modelBuilder.Entity("hakaton.Data.AutentifikacijaToken", b =>
                {
                    b.HasOne("hakaton.Data.Korisnici", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("hakaton.Data.Lekcija", b =>
                {
                    b.HasOne("hakaton.Data.Predmet", "Predmet")
                        .WithMany()
                        .HasForeignKey("PredmetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Predmet");
                });

            modelBuilder.Entity("hakaton.Data.Odgovor", b =>
                {
                    b.HasOne("hakaton.Data.Pitanje", "Pitanje")
                        .WithMany("Odgovori")
                        .HasForeignKey("PitanjeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pitanje");
                });

            modelBuilder.Entity("hakaton.Data.Pitanje", b =>
                {
                    b.HasOne("hakaton.Data.Lekcija", "Lekcija")
                        .WithMany()
                        .HasForeignKey("LekcijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lekcija");
                });

            modelBuilder.Entity("hakaton.Data.Test", b =>
                {
                    b.HasOne("hakaton.Data.Lekcija", "Lekcija")
                        .WithMany()
                        .HasForeignKey("LekcijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lekcija");
                });

            modelBuilder.Entity("hakaton.Data.Pitanje", b =>
                {
                    b.Navigation("Odgovori");
                });
#pragma warning restore 612, 618
        }
    }
}
